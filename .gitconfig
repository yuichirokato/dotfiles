[user]
  name = y.takahashi
  email = ikmy0709@gmail.com

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[alias]
  unstage = reset -q HEAD --
  discard = checkout --
  nevermind = !git reset --hard HEAD && git clean -d -f
  uncommit = reset --mixed HEAD~
  save = commit -m
  resave = commit --amend -m
  fold = commit --amend --no-edit
  invert = revert
  last = log -1 HEAD --format=format:%Cred%H
  copy-last-hash = !git last | pbcopy
  summary = status -u -s
  graph = log --graph -10 --branches --remotes --tags  --format=format:'%Cgreen%h %Cresetâ€¢ %<(75,trunc)%s (%cN, %ar) %Cred%d' --date-order
  history = log -10 --format=format:'%Cgreen%h %Creset%s (%aN, %ar)'
  new-branch = checkout -b
  rename-branch = branch -m
  delete-branch = branch -D
  branches = !git branch | ag -v '(staging|master|production)'
  recent-branches = branch -a --sort=committerdate
  tags = tag
  stashes = stash list
  stashall = stash -u
  prestage = diff -w
  precommit = diff -w --cached
  remotes = remote -v
  move = mv
  remove = rm
  unmerged = branch --no-merged
  unstash = stash pop
  what = show
  untrack = rm -r --cached
  rewrite = rebase -i
  back = checkout -
  contributors = shortlog -s -n --no-merges
  file-trail = log --follow -p -w
  merge-trail = log --ancestry-path --merges
  unmerged-files = diff --name-only
  patch = add --patch
  tuck = stash save -u
  current-branch = rev-parse --abbrev-ref HEAD
  untuck = stash pop stash@{0}
  boop = "!f() { B=$(git current-branch); git commit --allow-empty -m 'Boop!'; git push origin $B; }; f"
  aliases = !git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\:\\ /
  autotrack = "!f() { B=$(git current-branch); git branch --set-upstream-to=origin/$B; }; f"
  into = "!f() { B=$(git current-branch); git checkout $1; git pull; git merge $B --no-edit; }; f"
  into-staging = "!f() { B=$(git current-branch); git checkout staging; git pull; git merge $B --no-edit; }; f"
  into-master = "!f() { B=$(git current-branch); git checkout master; git pull; git merge $B --no-edit; }; f"
  work-log = !git log --reverse master...HEAD --format=format:'- %w(0,0,4)%B'
  submit = !git push && git autotrack
  whodunit = blame -wMC
  axe = log --reverse -p -w -S
  branchout = checkout -b
  branchmodify = branch -m
[filesystem "AdoptOpenJDK|11.0.4|/dev/disk1s5"]
	timestampResolution = 7000 nanoseconds
	minRacyThreshold = 0 nanoseconds
